#Learn Classes by Doing

import random
import time
import math

placeholder = 0

retainer_list = []

class Retainer(object):    #The core of the game! The digital humans that fight and die

    def __init__(self, name, hp, attack, armor):
        self.name = name
        self.hp = hp
        self.attack = attack
        self.armor = armor
            #Need a line in here where the retainer is added to the retainer_list

    def givewounds(self, attack, hp):    #Damage output is affected by healthiness
        damage = attack * (hp / 100)
        return damage

    def getwounds(self, armor, damage):
        hp_loss = damage - armor
        self.hp -= hp_loss
        return self.hp

    def status():
        print ('Name: ' + self.name)
        print ('HP: ' + self.hp)
        print ('Attack: ' + self.attack)
        print ('Armor: ' + self.armor)

class WarBand(object):

    def __init__(self, retainers):
        pass
        



def clash():
    pass
    
def placeholder_iterator():    #This works with the placeholder function to generate endless names
    placeholder += 1
    return placeholder

def placeholder():    #This is a generator for endless names of 'placeholder1' iterating the number
    placeholder_iterator()
    return('placeholder' + placeholder)
    

def evaluator(x):    #This function is to evaluate the health of a retainer, but not give exact value
    evaluation = 0
    if x >= 100:
        evaluation = ('Excellent')
    elif x >= 80:
        evaluation = ('Good')
    elif x >= 60:
        evaluation = ('Fair')
    elif x >= 40:
        evaluation = ('Poor')
    elif x >= 20:
        evaluation = ('In a Bad Way')
    elif x >= 0:
        evaluation = ('Deadish')
    else:
        evaluation = ('Dead')
    print(evaluation)
    return evaluation
    
def create_custom_retainer():    #The function to create a new retainer from the console
    name = input('Name the Retainer: ')
    hp = input('Assign Hit Points: ')
    attack = input('Assign Attack: ')
    armor = input('Assign Armor: ')
    r = Retainer(name, hp, attack, armor)
    return r
    

def evaluate_retainer():    #Returns vitals of a retainer
    print retainer_list
    print('Evaluate Which Retainer? ')
    
    
    
    





def menu():    #The menu!
    choice = 0
    print('(C)reate Custom Retainer, (F)ight Retainers, (E)valuate Retainer,'
          '(L)ist Retainers')
    choice = input('---> ')
    if choice == c:
        create_custom_retainer()
    if choice == f:
        pass
    if choice == e:
        pass
    if choice == l:
        pass
    
          
    
    

def main():
    menu()

main()

    
    
